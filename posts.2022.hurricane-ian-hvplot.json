{"version":2,"kind":"Notebook","sha256":"c55aeb333d55c10640baf8aa35dbedcbd9311bcfd8850257df121b0c2481be31","slug":"posts.2022.hurricane-ian-hvplot","location":"/posts/2022/hurricane-ian-hvplot.ipynb","dependencies":[],"frontmatter":{"title":"Visualizing Hurricane Ian Using hvPlot","content_includes_title":false,"tags":["NEXRAD","Data Visualization","Hurricane"],"authors":[{"id":"Max Grover","name":"Max Grover"}],"date":"2022-09-27","kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"github":"https://github.com/mgrover1/blog","numbering":{"title":{"offset":2}},"edit_url":"https://github.com/mgrover1/blog/blob/main/posts/2022/hurricane-ian-hvplot.ipynb","thumbnail":"/build/hurricane-ian-hvplot-200126e09ab264320b68672c3a790d6b.png","exports":[{"format":"ipynb","filename":"hurricane-ian-hvplot.ipynb","url":"/build/hurricane-ian-hvplot-4d0357ac91b33c77c1518023fcd94972.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this post, we explore how we can use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bEAb4oe6aF"},{"type":"link","url":"https://hvplot.holoviz.org/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"hvPlot","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JfCelUfeDS"}],"urlSource":"https://hvplot.holoviz.org/","key":"YIZKr0v1nt"},{"type":"text","value":" to plot data from Hurricane Ian, which will soon make landfall in Florida.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ovqW0574vW"}],"key":"QqbnovGaPC"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Motivation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rnpPqliXVG"}],"identifier":"motivation","label":"Motivation","html_id":"motivation","implicit":true,"key":"hdVARKCelX"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"By the end of this post, you will be able to recreate the following plot:\n","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ysSmFMIHcP"},{"type":"image","url":"/build/hurricane-ian-hvplot-200126e09ab264320b68672c3a790d6b.png","alt":"Hurricane Ian Plot","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ojBe53Ecp9","urlSource":"../images/hurricane-ian-hvplot.png"}],"key":"MvfIibJjSG"}],"visibility":"show","key":"eJHkjO8sjX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KmUb8ils0P"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"yTFQnCpYNf"}],"key":"LIR15gQbBQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import cartopy.crs as ccrs\nimport geopandas as gpd\nimport fiona\n\nfrom siphon.simplewebservice.ndbc import NDBC\nimport holoviews as hv\nimport hvplot.pandas\nfiona.drvsupport.supported_drivers['libkml'] = 'rw' # enable KML support which is disabled by default\nfiona.drvsupport.supported_drivers['LIBKML'] = 'rw' # enable KML support which is disabled by default\n\nhv.extension(\"bokeh\")","key":"gRj2lB7HRg"},{"type":"output","id":"Op_f2s_40hbLnGmkmie0P","data":[{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content_type":"application/javascript","hash":"2473dc18baa4aa96583e88a5179b22cb","path":"/build/2473dc18baa4aa96583e88a5179b22cb.json"},"application/vnd.holoviews_load.v0+json":{"content_type":"application/vnd.holoviews_load.v0+json","hash":"2473dc18baa4aa96583e88a5179b22cb","path":"/build/2473dc18baa4aa96583e88a5179b22cb.json"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        }) \n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<style>.bk-root, .bk-root .bk:before, .bk-root .bk:after {\n  font-family: var(--jp-ui-font-size1);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--jp-ui-font-color1);\n}\n</style>","content_type":"text/html"}}}],"key":"HU75nScgEh"}],"key":"bptnrrv37z"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j1RFkBMgiO"}],"identifier":"access-the-data","label":"Access the Data","html_id":"access-the-data","implicit":true,"key":"c2y5GJyVbv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We are interested in looking at data related to Hurricane Ian, which is currently off the Florida Coast. We want to plot the expected hurricane track, and the some surface observations from buoys, or floating platforms on water!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sr8TZGVxY2"}],"key":"GGHnLjMHAc"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"National Hurricane Center Data","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"GuhQj1kSrR"}],"identifier":"national-hurricane-center-data","label":"National Hurricane Center Data","html_id":"national-hurricane-center-data","implicit":true,"key":"g0VTQobB87"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We are using a few different datasets here. Let’s start with the hurricane forecast from the National Hurricane Center, accessible from their Geographic Information Systems (GIS) webpage:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LvzF7QBwpF"}],"key":"OFZg2Uo8JJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://www.nhc.noaa.gov/gis/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"NHC GIS Portal","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hJHxuN4qVH"}],"urlSource":"https://www.nhc.noaa.gov/gis/","key":"LFVT83gYZA"}],"key":"LSuynX2TG4"}],"key":"PR1GsIXFYy"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"We need to select the kmz files (","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mpinHTozzz"},{"type":"link","url":"https://www.google.com/earth/outreach/learn/packaging-content-in-a-kmz-file/#:~:text=latest%20version%20here.-,What%20Is%20a%20KMZ%20File%3F,KMZ%20files%20using%20Google%20Earth.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"a Google GIS file standard","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"zBGNs6xpO6"}],"urlSource":"https://www.google.com/earth/outreach/learn/packaging-content-in-a-kmz-file/#:~:text=latest%20version%20here.-,What%20Is%20a%20KMZ%20File%3F,KMZ%20files%20using%20Google%20Earth.","key":"YS4MwHWfox"},{"type":"text","value":" for the Hurricane Ian cone and track.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"PzQWJ7LDM4"}],"key":"k4PL8adHH9"},{"type":"heading","depth":4,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"The Cone","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"QOyinfwwOy"}],"identifier":"the-cone","label":"The Cone","html_id":"the-cone","implicit":true,"key":"cprUTKTn7c"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"A forecast cone is defines as the following, from the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"bYfFKLTGQ7"},{"type":"link","url":"https://www.nhc.noaa.gov/aboutcone.shtml#:~:text=Definition%3A,%2C%2036%20hours%2C%20etc","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"National Hurricane Center","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"JSWsaz3LM8"}],"urlSource":"https://www.nhc.noaa.gov/aboutcone.shtml#:~:text=Definition%3A,%2C%2036%20hours%2C%20etc","key":"oMR8tC03ox"}],"key":"jECRx2tX42"},{"type":"code","lang":"","value":"The cone represents the probable track of the center of a tropical cyclone, and is formed by enclosing the area swept out by a set of circles (not shown) along the forecast track (at 12, 24, 36 hours, etc). The size of each circle is set so that two-thirds of historical official forecast errors over a 5-year sample fall within the circle. The circle radii defining the cones in 2022 for the Atlantic, Eastern North Pacific, and Central North Pacific basins are given in the table below.\n\nOne can also examine historical tracks to determine how often the entire 5-day path of a cyclone remains completely within the area of the cone. This is a different perspective that ignores most timing errors. For example, a storm moving very slowly but in the expected direction would still be within the area of the cone, even though the track forecast error could be very large. Based on forecasts over the previous 5 years, the entire track of the tropical cyclone can be expected to remain within the cone roughly 60-70% of the time.","position":{"start":{"line":17,"column":1},"end":{"line":21,"column":1}},"key":"uo9pojMOrg"},{"type":"heading","depth":4,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"The Best Track","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"mzRfHZH4sF"}],"identifier":"the-best-track","label":"The Best Track","html_id":"the-best-track","implicit":true,"key":"BQwAYUAIKt"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"The Best Track Dataset is the best estimated track from the variety of possible scenarios.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"hFUqNuZDvC"}],"key":"ef18LdZzUY"}],"key":"SY4QFft534"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read the Data Using Geopandas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zY1CUE6xsO"}],"identifier":"read-the-data-using-geopandas","label":"Read the Data Using Geopandas","html_id":"read-the-data-using-geopandas","implicit":true,"key":"sY3S1PfNvM"}],"key":"fmBiqIbWha"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_cone = gpd.read_file(\"../data/AL092022_CONE_latest.kmz\")\nhurricane_track = gpd.read_file(\"../data/AL092022_TRACK_latest.kmz\")","key":"Y82HddyLkI"},{"type":"output","id":"Pc_jet2paIziZXacWD8iB","data":[],"key":"Sy0hebOVXI"}],"key":"ioJQpObtrQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_track.head()","key":"XoeXJTYYc3"},{"type":"output","id":"wcaVXQbj4UnZpMy8Npls7","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>description</th>\n      <th>timestamp</th>\n      <th>begin</th>\n      <th>end</th>\n      <th>altitudeMode</th>\n      <th>tessellate</th>\n      <th>extrude</th>\n      <th>visibility</th>\n      <th>drawOrder</th>\n      <th>...</th>\n      <th>pubAdvTime</th>\n      <th>TCInitLocation</th>\n      <th>maxWindKnots</th>\n      <th>maxWindMPH</th>\n      <th>maxGustKnots</th>\n      <th>maxGustMPH</th>\n      <th>stormMovement</th>\n      <th>minimumPressure</th>\n      <th>snippet</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>800 PM EDT Tue Sep 27 2022</td>\n      <td>24.4N, 83.0W</td>\n      <td>105</td>\n      <td>120</td>\n      <td>130</td>\n      <td>150</td>\n      <td>NNE</td>\n      <td>947</td>\n      <td>empty</td>\n      <td>LINESTRING Z (-83.00000 24.40000 0.00000, -82....</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>empty</td>\n      <td>LINESTRING Z (-83.00000 24.40000 0.00000, -82....</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>empty</td>\n      <td>POINT Z (-83.00000 24.40000 0.00000)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>empty</td>\n      <td>POINT Z (-82.90000 25.30000 0.00000)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>None</td>\n      <td>empty</td>\n      <td>POINT Z (-82.50000 26.60000 0.00000)</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"   Name                                        description timestamp begin  \\\n0  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n1  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n2  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n3  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n4  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n\n  end altitudeMode  tessellate  extrude  visibility drawOrder  ...  \\\n0 NaT         None          -1        0          -1      None  ...   \n1 NaT         None          -1        0          -1      None  ...   \n2 NaT         None          -1        0          -1      None  ...   \n3 NaT         None          -1        0          -1      None  ...   \n4 NaT         None          -1        0          -1      None  ...   \n\n                   pubAdvTime TCInitLocation maxWindKnots maxWindMPH  \\\n0  800 PM EDT Tue Sep 27 2022   24.4N, 83.0W          105        120   \n1                        None           None         None       None   \n2                        None           None         None       None   \n3                        None           None         None       None   \n4                        None           None         None       None   \n\n  maxGustKnots maxGustMPH stormMovement minimumPressure snippet  \\\n0          130        150           NNE             947   empty   \n1         None       None          None            None   empty   \n2         None       None          None            None   empty   \n3         None       None          None            None   empty   \n4         None       None          None            None   empty   \n\n                                            geometry  \n0  LINESTRING Z (-83.00000 24.40000 0.00000, -82....  \n1  LINESTRING Z (-83.00000 24.40000 0.00000, -82....  \n2               POINT Z (-83.00000 24.40000 0.00000)  \n3               POINT Z (-82.90000 25.30000 0.00000)  \n4               POINT Z (-82.50000 26.60000 0.00000)  \n\n[5 rows x 30 columns]","content_type":"text/plain"}}}],"key":"fJCs7poBr2"}],"key":"exJs1vpLff"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Our hurricane track file includes additional point data - we just need the line (the first row, so let’s filter based on the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LCfYyTkEjf"},{"type":"inlineCode","value":"TCInitLocation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AGRr9EUmAN"}],"key":"FjEcS8PLiD"}],"key":"d3gdLNlJNt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_track = hurricane_track.dropna(subset=[\"TCInitLocation\"])\nhurricane_track","key":"Bn5ozAv2pu"},{"type":"output","id":"vmwaHTirXdCBiETExUByb","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>description</th>\n      <th>timestamp</th>\n      <th>begin</th>\n      <th>end</th>\n      <th>altitudeMode</th>\n      <th>tessellate</th>\n      <th>extrude</th>\n      <th>visibility</th>\n      <th>drawOrder</th>\n      <th>...</th>\n      <th>pubAdvTime</th>\n      <th>TCInitLocation</th>\n      <th>maxWindKnots</th>\n      <th>maxWindMPH</th>\n      <th>maxGustKnots</th>\n      <th>maxGustMPH</th>\n      <th>stormMovement</th>\n      <th>minimumPressure</th>\n      <th>snippet</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>None</td>\n      <td>\\n\\t   \\t  &lt;table&gt; \\n                        ...</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>800 PM EDT Tue Sep 27 2022</td>\n      <td>24.4N, 83.0W</td>\n      <td>105</td>\n      <td>120</td>\n      <td>130</td>\n      <td>150</td>\n      <td>NNE</td>\n      <td>947</td>\n      <td>empty</td>\n      <td>LINESTRING Z (-83.00000 24.40000 0.00000, -82....</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 30 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"   Name                                        description timestamp begin  \\\n0  None   \\n\\t   \\t  <table> \\n                        ...       NaT   NaT   \n\n  end altitudeMode  tessellate  extrude  visibility drawOrder  ...  \\\n0 NaT         None          -1        0          -1      None  ...   \n\n                   pubAdvTime TCInitLocation maxWindKnots maxWindMPH  \\\n0  800 PM EDT Tue Sep 27 2022   24.4N, 83.0W          105        120   \n\n  maxGustKnots maxGustMPH stormMovement minimumPressure snippet  \\\n0          130        150           NNE             947   empty   \n\n                                            geometry  \n0  LINESTRING Z (-83.00000 24.40000 0.00000, -82....  \n\n[1 rows x 30 columns]","content_type":"text/plain"}}}],"key":"WScaDzHIgc"}],"key":"WZ86tT4SCH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Investigate the GeoDataframes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"avfGE9deXi"}],"identifier":"investigate-the-geodataframes","label":"Investigate the GeoDataframes","html_id":"investigate-the-geodataframes","implicit":true,"key":"uQvvV7Zdyq"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s check out the geodataframe. Notice how it looks like a typical dataframe, with additional geometry information.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qdUmbecDG7"}],"key":"A3Zm5KqLTy"}],"key":"gMAspF0uKL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_cone","key":"VJNVNH5Qst"},{"type":"output","id":"K7oAtC0sZYeP0HLlXkfJp","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>description</th>\n      <th>timestamp</th>\n      <th>begin</th>\n      <th>end</th>\n      <th>altitudeMode</th>\n      <th>tessellate</th>\n      <th>extrude</th>\n      <th>visibility</th>\n      <th>drawOrder</th>\n      <th>...</th>\n      <th>stormType</th>\n      <th>advisoryDate</th>\n      <th>basin</th>\n      <th>fcstpd</th>\n      <th>storm</th>\n      <th>atcfid</th>\n      <th>advisoryNum</th>\n      <th>stormNum</th>\n      <th>stormName</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>None</td>\n      <td>None</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>None</td>\n      <td>-1</td>\n      <td>0</td>\n      <td>-1</td>\n      <td>None</td>\n      <td>...</td>\n      <td>HU</td>\n      <td>800 PM EDT Tue Sep 27 2022</td>\n      <td>AL</td>\n      <td>120</td>\n      <td>Hurricane Ian</td>\n      <td>AL092022</td>\n      <td>19A</td>\n      <td>9</td>\n      <td>Ian</td>\n      <td>POLYGON Z ((-83.04900 24.14015 0.00000, -83.02...</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 22 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"   Name description timestamp begin end altitudeMode  tessellate  extrude  \\\n0  None        None       NaT   NaT NaT         None          -1        0   \n\n   visibility drawOrder  ... stormType                advisoryDate basin  \\\n0          -1      None  ...        HU  800 PM EDT Tue Sep 27 2022    AL   \n\n  fcstpd          storm    atcfid advisoryNum stormNum stormName  \\\n0    120  Hurricane Ian  AL092022         19A        9       Ian   \n\n                                            geometry  \n0  POLYGON Z ((-83.04900 24.14015 0.00000, -83.02...  \n\n[1 rows x 22 columns]","content_type":"text/plain"}}}],"key":"pFrA5MYDyS"}],"key":"Jl9ccifjLA"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can create static ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rkiR6Hev6p"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vh0zpGIC93"},{"type":"text","value":" plots using the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nFYjNLkqUs"},{"type":"inlineCode","value":".plot()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y9a5VA60oG"},{"type":"text","value":" method.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zFjJvuQMaK"}],"key":"oA0geEVRqr"}],"key":"cIUXzpNCJC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_cone.plot()\nhurricane_track.plot();","key":"Zpus9LwoZ5"},{"type":"output","id":"TcDNv_DfzjROoDXkJTZDX","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d551f07c9fd8f6a96f1fe7b8a969910a","path":"/build/d551f07c9fd8f6a96f1fe7b8a969910a.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8c3554c92bdb95ea6d5207f74556cb2e","path":"/build/8c3554c92bdb95ea6d5207f74556cb2e.png"},"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"}}}],"key":"XnFWpFXkwF"}],"key":"GXaoXNLEUJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access NOAA Buoy Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s4APKu5UPJ"}],"identifier":"access-noaa-buoy-data","label":"Access NOAA Buoy Data","html_id":"access-noaa-buoy-data","implicit":true,"key":"ZKzkmQPgm5"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The National Oceanic and Atmospheric Administation (NOAA) has a buoy dataset (from the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"f15vbklNAS"},{"type":"link","url":"https://www.ndbc.noaa.gov/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"National Data Buoy Center","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cKNErDQD8E"}],"urlSource":"https://www.ndbc.noaa.gov/","key":"Ayze33ClfN"},{"type":"text","value":"), which includes observations from around the world. We can access this data using ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jYCt9g05KO"},{"type":"link","url":"https://unidata.github.io/siphon/latest/index.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"siphon","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LZgj6Wi8yT"}],"urlSource":"https://unidata.github.io/siphon/latest/index.html","key":"y2lSK4BkVt"},{"type":"text","value":", a tool developed by the Unidata Program Center which makes accessing this dataset ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eM3BPey404"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"much","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WLZejEr5Ww"}],"key":"LAF99o6CKW"},{"type":"text","value":" easier.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CPGhQzG5d9"}],"key":"z8ZXf8cKCe"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can use the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Za77zegp68"},{"type":"inlineCode","value":".lastest_observations()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Wn3khcHDh5"},{"type":"text","value":" method from the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QbH3xPrPHk"},{"type":"inlineCode","value":"NDBC","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"w0D7TD4wy4"},{"type":"text","value":" module to access the latest data.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mde2gjLDOm"}],"key":"seHqP8Sk1v"}],"key":"EKKDrPknOR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"buoy_df = NDBC.latest_observations()\nbuoy_df","key":"u0OW7y7PPh"},{"type":"output","id":"Y2jlmoInyQ9wofbo0RkLn","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>station</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>wind_direction</th>\n      <th>wind_speed</th>\n      <th>wind_gust</th>\n      <th>wave_height</th>\n      <th>dominant_wave_period</th>\n      <th>average_wave_period</th>\n      <th>dominant_wave_direction</th>\n      <th>pressure</th>\n      <th>3hr_pressure_tendency</th>\n      <th>air_temperature</th>\n      <th>water_temperature</th>\n      <th>dewpoint</th>\n      <th>visibility</th>\n      <th>water_level_above_mean</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>13001</td>\n      <td>12.000</td>\n      <td>-23.000</td>\n      <td>336.0</td>\n      <td>4.1</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1013.3</td>\n      <td>NaN</td>\n      <td>27.6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>13002</td>\n      <td>21.000</td>\n      <td>-23.000</td>\n      <td>37.0</td>\n      <td>3.5</td>\n      <td>4.8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>26.1</td>\n      <td>26.8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>13008</td>\n      <td>15.000</td>\n      <td>-38.000</td>\n      <td>14.0</td>\n      <td>5.7</td>\n      <td>7.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1012.8</td>\n      <td>NaN</td>\n      <td>27.3</td>\n      <td>28.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13009</td>\n      <td>8.000</td>\n      <td>-38.000</td>\n      <td>173.0</td>\n      <td>4.3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>28.8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 00:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14043</td>\n      <td>-12.000</td>\n      <td>67.000</td>\n      <td>101.0</td>\n      <td>4.8</td>\n      <td>6.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1012.7</td>\n      <td>NaN</td>\n      <td>24.2</td>\n      <td>25.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>894</th>\n      <td>WYCM6</td>\n      <td>30.326</td>\n      <td>-89.326</td>\n      <td>10.0</td>\n      <td>5.7</td>\n      <td>7.2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1017.7</td>\n      <td>1.3</td>\n      <td>25.9</td>\n      <td>26.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>895</th>\n      <td>YATA2</td>\n      <td>59.548</td>\n      <td>-139.733</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1013.2</td>\n      <td>0.6</td>\n      <td>NaN</td>\n      <td>12.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>896</th>\n      <td>YKRV2</td>\n      <td>37.251</td>\n      <td>-76.342</td>\n      <td>30.0</td>\n      <td>4.1</td>\n      <td>4.6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1016.3</td>\n      <td>2.6</td>\n      <td>21.3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>897</th>\n      <td>YKTV2</td>\n      <td>37.227</td>\n      <td>-76.479</td>\n      <td>360.0</td>\n      <td>2.6</td>\n      <td>3.6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1016.2</td>\n      <td>3.1</td>\n      <td>20.0</td>\n      <td>23.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 01:00:00+00:00</td>\n    </tr>\n    <tr>\n      <th>898</th>\n      <td>YRSV2</td>\n      <td>37.414</td>\n      <td>-76.712</td>\n      <td>230.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1016.0</td>\n      <td>NaN</td>\n      <td>15.8</td>\n      <td>NaN</td>\n      <td>10.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2022-09-28 00:30:00+00:00</td>\n    </tr>\n  </tbody>\n</table>\n<p>899 rows × 18 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"    station  latitude  longitude  wind_direction  wind_speed  wind_gust  \\\n0     13001    12.000    -23.000           336.0         4.1        5.0   \n1     13002    21.000    -23.000            37.0         3.5        4.8   \n2     13008    15.000    -38.000            14.0         5.7        7.0   \n3     13009     8.000    -38.000           173.0         4.3        NaN   \n4     14043   -12.000     67.000           101.0         4.8        6.0   \n..      ...       ...        ...             ...         ...        ...   \n894   WYCM6    30.326    -89.326            10.0         5.7        7.2   \n895   YATA2    59.548   -139.733             NaN         NaN        NaN   \n896   YKRV2    37.251    -76.342            30.0         4.1        4.6   \n897   YKTV2    37.227    -76.479           360.0         2.6        3.6   \n898   YRSV2    37.414    -76.712           230.0         1.0        NaN   \n\n     wave_height  dominant_wave_period  average_wave_period  \\\n0            NaN                   NaN                  NaN   \n1            NaN                   NaN                  NaN   \n2            NaN                   NaN                  NaN   \n3            NaN                   NaN                  NaN   \n4            NaN                   NaN                  NaN   \n..           ...                   ...                  ...   \n894          NaN                   NaN                  NaN   \n895          NaN                   NaN                  NaN   \n896          NaN                   NaN                  NaN   \n897          NaN                   NaN                  NaN   \n898          NaN                   NaN                  NaN   \n\n     dominant_wave_direction  pressure  3hr_pressure_tendency  \\\n0                        NaN    1013.3                    NaN   \n1                        NaN       NaN                    NaN   \n2                        NaN    1012.8                    NaN   \n3                        NaN       NaN                    NaN   \n4                        NaN    1012.7                    NaN   \n..                       ...       ...                    ...   \n894                      NaN    1017.7                    1.3   \n895                      NaN    1013.2                    0.6   \n896                      NaN    1016.3                    2.6   \n897                      NaN    1016.2                    3.1   \n898                      NaN    1016.0                    NaN   \n\n     air_temperature  water_temperature  dewpoint  visibility  \\\n0               27.6                NaN       NaN         NaN   \n1               26.1               26.8       NaN         NaN   \n2               27.3               28.0       NaN         NaN   \n3               28.8                NaN       NaN         NaN   \n4               24.2               25.0       NaN         NaN   \n..               ...                ...       ...         ...   \n894             25.9               26.0       NaN         NaN   \n895              NaN               12.0       NaN         NaN   \n896             21.3                NaN       NaN         NaN   \n897             20.0               23.5       NaN         NaN   \n898             15.8                NaN      10.0         NaN   \n\n     water_level_above_mean                      time  \n0                       NaN 2022-09-28 01:00:00+00:00  \n1                       NaN 2022-09-28 01:00:00+00:00  \n2                       NaN 2022-09-28 01:00:00+00:00  \n3                       NaN 2022-09-28 00:00:00+00:00  \n4                       NaN 2022-09-28 01:00:00+00:00  \n..                      ...                       ...  \n894                     NaN 2022-09-28 01:00:00+00:00  \n895                     NaN 2022-09-28 01:00:00+00:00  \n896                     NaN 2022-09-28 01:00:00+00:00  \n897                     NaN 2022-09-28 01:00:00+00:00  \n898                     NaN 2022-09-28 00:30:00+00:00  \n\n[899 rows x 18 columns]","content_type":"text/plain"}}}],"key":"vdtNCqcqp2"}],"key":"LPNDXEmcIV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DL7DJCYGkq"}],"identifier":"filter-the-dataset","label":"Filter the Dataset","html_id":"filter-the-dataset","implicit":true,"key":"yvUIMDC3sd"}],"key":"OzR6HqcSPD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We are interested in locations that have ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vX7t7Em9Be"},{"type":"inlineCode","value":"water_temperature","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dxA3A21w2p"},{"type":"text","value":" values, so we filter using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SXRZ40LNSR"},{"type":"inlineCode","value":".dropna()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"frTPsGsC88"}],"key":"f6gBzdBpIH"}],"key":"GRRLlPWdLk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"buoy_df = buoy_df.dropna(subset=[\"water_temperature\"])\nbuoy_df.plot.scatter(x='longitude', y='latitude', c='water_temperature')","key":"ZjS8cce4FZ"},{"type":"output","id":"H4M_brEXwLc_KyshtEvbh","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"810fc554b888e9374fecf17757213b9c","path":"/build/810fc554b888e9374fecf17757213b9c.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"Alr2ggSI5M"}],"key":"Af47BUUIVM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot our Data using hvPlot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CX7YFXuyaB"}],"identifier":"plot-our-data-using-hvplot","label":"Plot our Data using hvPlot","html_id":"plot-our-data-using-hvplot","implicit":true,"key":"A8OXeWR6r7"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s move to interactive visualization!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"resmuwcLMI"}],"key":"LkblFKUk7H"}],"key":"lpcabg0rIx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Hurricane Cone and Track Using hvPlot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uPX2YbHf0J"}],"identifier":"plot-the-hurricane-cone-and-track-using-hvplot","label":"Plot the Hurricane Cone and Track Using hvPlot","html_id":"plot-the-hurricane-cone-and-track-using-hvplot","implicit":true,"key":"kG84Yy8QXi"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can do better than just static plots - let’s create an interactive one using hvPlot!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UZAgbdghJd"}],"key":"TPwvFY7wjA"}],"key":"sgV6OMjUzC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_cone.hvplot(color='None',\n                      line_width=3,\n                      coastline=True,\n                      xlim=(-95, -65),\n                      ylim=(20, 40),\n                      label='NHC Forecast Cone for Hurricane Ian',\n                      projection=ccrs.PlateCarree(),\n                      features=[\"land\", \"ocean\"])","key":"fnuD3IVt5J"},{"type":"output","id":"xbkxABOyCKHuY7AA8wvJo","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":9,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1004"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"e265525d71132dcd7221e84a9b57dc62","path":"/build/e265525d71132dcd7221e84a9b57dc62.html"},"text/plain":{"content":":Overlay\n   .Land.I                                       :Feature   [Longitude,Latitude]\n   .Ocean.I                                      :Feature   [Longitude,Latitude]\n   .Polygons.NHC_Forecast_Cone_for_Hurricane_Ian :Polygons   [Longitude,Latitude]\n   .Coastline.I                                  :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"X5zcrz2ED2"}],"key":"TPAlmCo5pN"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And the same for the best estimated track","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UladCmzujr"}],"key":"y9nBVlKC5t"}],"key":"Zkr1QMWCt1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_track_plot = hurricane_track.hvplot(line_color='Red',\n                                              color=\"None\",\n                                              line_width=3,\n                                              coastline=True,\n                                              xlim=(-95, -65),\n                                              ylim=(20, 40),\n                                              label='NHC Forecast Track for Hurricane Ian',\n                                              projection=ccrs.PlateCarree(),\n                                              features=[\"land\", \"ocean\"])\nhurricane_track_plot","key":"h6vrFdqJRK"},{"type":"output","id":"5FIJzDDtKYVSrCFiGsFKw","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":10,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1231"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"006ad87ea312ecc098c78e7e52d757c0","path":"/build/006ad87ea312ecc098c78e7e52d757c0.html"},"text/plain":{"content":":Overlay\n   .Land.I                                    :Feature   [Longitude,Latitude]\n   .Ocean.I                                   :Feature   [Longitude,Latitude]\n   .Path.NHC_Forecast_Track_for_Hurricane_Ian :Path   [Longitude,Latitude]\n   .Coastline.I                               :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"kAp9sWFScb"}],"key":"pOKqUGlvae"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We still need a title though, since this does not tell us what time this is valid... this information is in the dataframe!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zUZqqiXjwk"}],"key":"q6aDtrEXun"}],"key":"KKxEiybe8r"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_cone.advisoryDate","key":"BJERjA1NDZ"},{"type":"output","id":"gILd5n0wNvVJ9a2-lfBZm","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"0    800 PM EDT Tue Sep 27 2022\nName: advisoryDate, dtype: object","content_type":"text/plain"}}}],"key":"iPufHsKeIY"}],"key":"KioGHlEhRc"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Combine our Forecast Cone and Track Plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MS40ldxM4r"}],"identifier":"combine-our-forecast-cone-and-track-plots","label":"Combine our Forecast Cone and Track Plots","html_id":"combine-our-forecast-cone-and-track-plots","implicit":true,"key":"k3iYi9CNIz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s add the titles, and combine our plots.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"k1oznhHv1u"}],"key":"vclheqdXMu"}],"key":"jgtaoKOrfY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_track_plot = hurricane_track.hvplot(line_color='Red',\n                                              color=\"None\",\n                                              line_width=3,\n                                              coastline=True,\n                                              xlim=(-95, -65),\n                                              ylim=(20, 40),\n                                              title=f'NHC Forecast Valid: {hurricane_track.pubAdvTime.values[0]}',\n                                              label='NHC Forecast Track for Hurricane Ian',\n                                              projection=ccrs.PlateCarree()\n                                             )\n\nhurricane_cone_plot = hurricane_cone.hvplot(color='None',\n                                            line_width=3,\n                                            line_color='Black',\n                                            coastline=True,\n                                            xlim=(-95, -65),\n                                            ylim=(20, 40),\n                                            title=f\"NHC Forecast Valid {hurricane_cone.advisoryDate.values[0]}\",\n                                            label='NHC Forecast Cone for Hurricane Ian',\n                                            projection=ccrs.PlateCarree(),\n                                            features=[\"land\", \"ocean\"])\n\nhurricane_plot = (hurricane_cone_plot * hurricane_track_plot)\nhurricane_plot","key":"qPvUTC6K64"},{"type":"output","id":"a0LccreVWiRWjhNr05lUR","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":12,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1458"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"48fa9e3920126fb5b88918b35259898f","path":"/build/48fa9e3920126fb5b88918b35259898f.html"},"text/plain":{"content":":Overlay\n   .Land.I                                       :Feature   [Longitude,Latitude]\n   .Ocean.I                                      :Feature   [Longitude,Latitude]\n   .Polygons.NHC_Forecast_Cone_for_Hurricane_Ian :Polygons   [Longitude,Latitude]\n   .Coastline.I                                  :Feature   [Longitude,Latitude]\n   .Path.NHC_Forecast_Track_for_Hurricane_Ian    :Path   [Longitude,Latitude]\n   .Coastline.II                                 :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"Ue8x6O4dc4"}],"key":"RhlafpLrF8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Buoy Data using hvPlot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ftk8jwq4wF"}],"identifier":"plot-the-buoy-data-using-hvplot","label":"Plot the Buoy Data using hvPlot","html_id":"plot-the-buoy-data-using-hvplot","implicit":true,"key":"fVTUxhSygW"}],"key":"BhTs2EUAab"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"buoy_plot = buoy_df.hvplot.points(x='longitude',\n                                  y='latitude',\n                                  c='water_temperature',\n                                  cmap='inferno',\n                                  label='NOAA Buoy Locations',\n                                  title='NOAA Buoy Water Temperature',\n                                  clabel='Temperature (degC)',\n                                  geo=True,\n                                  coastline=True,\n                                  projection=ccrs.PlateCarree(),\n                                  xlim=(-95, -65),\n                                  ylim=(20, 40),\n                                  clim=(20, 35))\nbuoy_plot","key":"k0DybvuVZv"},{"type":"output","id":"ckcG41QaZhss8yQnwJ1pm","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":13,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1755"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"c3735502b2630d2dc8d4991c8423e038","path":"/build/c3735502b2630d2dc8d4991c8423e038.html"},"text/plain":{"content":":Overlay\n   .Points.NOAA_Buoy_Locations :Points   [longitude,latitude]   (water_temperature)\n   .Coastline.I                :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"Ds0kS3nEz3"}],"key":"VRoYPWarqd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Final Visualization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xO8LP4qKW8"}],"identifier":"final-visualization","label":"Final Visualization","html_id":"final-visualization","implicit":true,"key":"cvIm9rrvNm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s put it all together! We combine our plots using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"q5VzCuzlU5"},{"type":"inlineCode","value":"*","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VlCm4uvwdO"},{"type":"text","value":" operator.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XVnP0AR0D5"}],"key":"aevybJSqzH"}],"key":"cEmpiKmFrQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hurricane_plot * buoy_plot","key":"kTDBw9zuZe"},{"type":"output","id":"dlqpFYfFimHi1OAFp64AE","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":14,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1938"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"d66b873bb5ae0206236baccf2a385605","path":"/build/d66b873bb5ae0206236baccf2a385605.html"},"text/plain":{"content":":Overlay\n   .Land.I                                       :Feature   [Longitude,Latitude]\n   .Ocean.I                                      :Feature   [Longitude,Latitude]\n   .Polygons.NHC_Forecast_Cone_for_Hurricane_Ian :Polygons   [Longitude,Latitude]\n   .Coastline.I                                  :Feature   [Longitude,Latitude]\n   .Path.NHC_Forecast_Track_for_Hurricane_Ian    :Path   [Longitude,Latitude]\n   .Coastline.II                                 :Feature   [Longitude,Latitude]\n   .Points.NOAA_Buoy_Locations                   :Points   [longitude,latitude]   (water_temperature)\n   .Coastline.III                                :Feature   [Longitude,Latitude]","content_type":"text/plain"}}}],"key":"St7r9eZrvc"}],"key":"afpqKYSG9C"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Conclusions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IZETKxk6zC"}],"identifier":"conclusions","label":"Conclusions","html_id":"conclusions","implicit":true,"key":"lvBuNQerYW"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Within this example, we explored visualizing data from the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nxLQL2xuup"},{"type":"link","url":"https://www.nhc.noaa.gov/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"National Hurricane Center","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wreAGG96hJ"}],"urlSource":"https://www.nhc.noaa.gov/","key":"FORbKJgmX8"},{"type":"text","value":", and from the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ehwQ9WVcw4"},{"type":"link","url":"https://www.ndbc.noaa.gov/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"National Data Buoy Center","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BvArRZ7XmK"}],"urlSource":"https://www.ndbc.noaa.gov/","key":"JVtU14ddy2"},{"type":"text","value":". We encourage you to try this out on your own.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EJmmXcxGk2"}],"key":"Piw0CKWGxM"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In the future, it would be nice to add other datasets, such as weather radar data, onto these plots as well.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ozaw6d7h5g"}],"key":"dNVtNVWToI"}],"key":"YEBEwT0nvB"}],"key":"pvJlP3GdWq"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Chicago Fall Colors in Context: Using GHCNd Data!","url":"/posts/2022/fall-colors-ghcnd","group":"2022"},"next":{"title":"Moving to Illinois (Again)","url":"/posts/2022/moving-to-illinois","group":"2022"}}},"domain":"http://localhost:3000"}